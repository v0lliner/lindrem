{"ast":null,"code":"var _jsxFileName = \"/Users/volli-fred/www/lindrem-frontend/src/components/LanguageSwitcher.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useLanguage, useTranslation } from '../i18nContext';\n\n/**\n * LanguageSwitcher displays buttons for each supported language. The current\n * language is highlighted. Switching languages updates both the i18n context\n * and the URL prefix. Button labels are taken from the layout translation\n * file so they can be localised.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LanguageSwitcher() {\n  _s();\n  const {\n    language,\n    changeLanguage\n  } = useLanguage();\n  const t = useTranslation('layout');\n  const languages = [{\n    code: 'fi',\n    label: t('langFi')\n  }, {\n    code: 'et',\n    label: t('langEt')\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"language-switcher\",\n    children: languages.map(({\n      code,\n      label\n    }) => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => changeLanguage(code),\n      className: language === code ? 'active' : '',\n      children: label\n    }, code, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(LanguageSwitcher, \"0G+ElO/r1nBHM6fxiFiBMCAPIMM=\", false, function () {\n  return [useLanguage, useTranslation];\n});\n_c = LanguageSwitcher;\nvar _c;\n$RefreshReg$(_c, \"LanguageSwitcher\");","map":{"version":3,"names":["React","useLanguage","useTranslation","jsxDEV","_jsxDEV","LanguageSwitcher","_s","language","changeLanguage","t","languages","code","label","className","children","map","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/volli-fred/www/lindrem-frontend/src/components/LanguageSwitcher.jsx"],"sourcesContent":["import React from 'react';\nimport { useLanguage, useTranslation } from '../i18nContext';\n\n/**\n * LanguageSwitcher displays buttons for each supported language. The current\n * language is highlighted. Switching languages updates both the i18n context\n * and the URL prefix. Button labels are taken from the layout translation\n * file so they can be localised.\n */\nexport default function LanguageSwitcher() {\n  const { language, changeLanguage } = useLanguage();\n  const t = useTranslation('layout');\n  const languages = [\n    { code: 'fi', label: t('langFi') },\n    { code: 'et', label: t('langEt') },\n  ];\n  return (\n    <div className=\"language-switcher\">\n      {languages.map(({ code, label }) => (\n        <button\n          key={code}\n          onClick={() => changeLanguage(code)}\n          className={language === code ? 'active' : ''}\n        >\n          {label}\n        </button>\n      ))}\n    </div>\n  );\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,cAAc,QAAQ,gBAAgB;;AAE5D;AACA;AACA;AACA;AACA;AACA;AALA,SAAAC,MAAA,IAAAC,OAAA;AAMA,eAAe,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EACzC,MAAM;IAAEC,QAAQ;IAAEC;EAAe,CAAC,GAAGP,WAAW,CAAC,CAAC;EAClD,MAAMQ,CAAC,GAAGP,cAAc,CAAC,QAAQ,CAAC;EAClC,MAAMQ,SAAS,GAAG,CAChB;IAAEC,IAAI,EAAE,IAAI;IAAEC,KAAK,EAAEH,CAAC,CAAC,QAAQ;EAAE,CAAC,EAClC;IAAEE,IAAI,EAAE,IAAI;IAAEC,KAAK,EAAEH,CAAC,CAAC,QAAQ;EAAE,CAAC,CACnC;EACD,oBACEL,OAAA;IAAKS,SAAS,EAAC,mBAAmB;IAAAC,QAAA,EAC/BJ,SAAS,CAACK,GAAG,CAAC,CAAC;MAAEJ,IAAI;MAAEC;IAAM,CAAC,kBAC7BR,OAAA;MAEEY,OAAO,EAAEA,CAAA,KAAMR,cAAc,CAACG,IAAI,CAAE;MACpCE,SAAS,EAAEN,QAAQ,KAAKI,IAAI,GAAG,QAAQ,GAAG,EAAG;MAAAG,QAAA,EAE5CF;IAAK,GAJDD,IAAI;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKH,CACT;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACd,EAAA,CApBuBD,gBAAgB;EAAA,QACDJ,WAAW,EACtCC,cAAc;AAAA;AAAAmB,EAAA,GAFFhB,gBAAgB;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}